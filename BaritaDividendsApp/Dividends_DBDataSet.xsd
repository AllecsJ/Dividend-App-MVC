<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Dividends_DBDataSet" targetNamespace="http://tempuri.org/Dividends_DBDataSet.xsd" xmlns:mstns="http://tempuri.org/Dividends_DBDataSet.xsd" xmlns="http://tempuri.org/Dividends_DBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Dividends_DBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Dividends_DBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BaritaDividendsApp.Properties.Settings.GlobalReference.Default.Dividends_DBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="dividendsTableAdapter" GeneratorDataComponentClassName="dividendsTableAdapter" Name="dividends" UserDataComponentName="dividendsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Dividends_DBConnectionString (Settings)" DbObjectName="Dividends_DB.dbo.dividends" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[dividends] WHERE (([div_id] = @Original_div_id) AND ((@IsNull_symbol_code = 1 AND [symbol_code] IS NULL) OR ([symbol_code] = @Original_symbol_code)) AND ((@IsNull_payment_date = 1 AND [payment_date] IS NULL) OR ([payment_date] = @Original_payment_date)) AND ((@IsNull_record_date = 1 AND [record_date] IS NULL) OR ([record_date] = @Original_record_date)) AND ((@IsNull_status_id = 1 AND [status_id] IS NULL) OR ([status_id] = @Original_status_id)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_div_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="div_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_symbol_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_payment_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="payment_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_payment_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="payment_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_record_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="record_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_record_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="record_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[dividends] ([symbol_code], [payment_date], [record_date], [status_id]) VALUES (@symbol_code, @payment_date, @record_date, @status_id);
SELECT div_id, symbol_code, payment_date, record_date, status_id FROM dividends WHERE (div_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@payment_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="payment_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@record_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="record_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT div_id, symbol_code, payment_date, record_date, status_id FROM dbo.dividends</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[dividends] SET [symbol_code] = @symbol_code, [payment_date] = @payment_date, [record_date] = @record_date, [status_id] = @status_id WHERE (([div_id] = @Original_div_id) AND ((@IsNull_symbol_code = 1 AND [symbol_code] IS NULL) OR ([symbol_code] = @Original_symbol_code)) AND ((@IsNull_payment_date = 1 AND [payment_date] IS NULL) OR ([payment_date] = @Original_payment_date)) AND ((@IsNull_record_date = 1 AND [record_date] IS NULL) OR ([record_date] = @Original_record_date)) AND ((@IsNull_status_id = 1 AND [status_id] IS NULL) OR ([status_id] = @Original_status_id)));
SELECT div_id, symbol_code, payment_date, record_date, status_id FROM dividends WHERE (div_id = @div_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@payment_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="payment_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@record_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="record_date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_div_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="div_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_symbol_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_payment_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="payment_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_payment_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="payment_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_record_date" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="record_date" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_record_date" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="record_date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="div_id" ColumnName="div_id" DataSourceName="Dividends_DB.dbo.dividends" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@div_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="div_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="div_id" DataSetColumn="div_id" />
              <Mapping SourceColumn="symbol_code" DataSetColumn="symbol_code" />
              <Mapping SourceColumn="payment_date" DataSetColumn="payment_date" />
              <Mapping SourceColumn="record_date" DataSetColumn="record_date" />
              <Mapping SourceColumn="status_id" DataSetColumn="status_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="securitiesTableAdapter" GeneratorDataComponentClassName="securitiesTableAdapter" Name="securities" UserDataComponentName="securitiesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Dividends_DBConnectionString (Settings)" DbObjectName="Dividends_DB.dbo.securities" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[securities] WHERE (([symbol_code] = @Original_symbol_code) AND ((@IsNull_status_id = 1 AND [status_id] IS NULL) OR ([status_id] = @Original_status_id)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[securities] ([symbol_code], [description], [status_id]) VALUES (@symbol_code, @description, @status_id);
SELECT symbol_code, description, status_id FROM securities WHERE (symbol_code = @symbol_code)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@description" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT symbol_code, description, status_id FROM dbo.securities</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[securities] SET [symbol_code] = @symbol_code, [description] = @description, [status_id] = @status_id WHERE (([symbol_code] = @Original_symbol_code) AND ((@IsNull_status_id = 1 AND [status_id] IS NULL) OR ([status_id] = @Original_status_id)));
SELECT symbol_code, description, status_id FROM securities WHERE (symbol_code = @symbol_code)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@description" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_symbol_code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="symbol_code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="symbol_code" DataSetColumn="symbol_code" />
              <Mapping SourceColumn="description" DataSetColumn="description" />
              <Mapping SourceColumn="status_id" DataSetColumn="status_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="status_codesTableAdapter" GeneratorDataComponentClassName="status_codesTableAdapter" Name="status_codes" UserDataComponentName="status_codesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Dividends_DBConnectionString (Settings)" DbObjectName="Dividends_DB.dbo.status_codes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[status_codes] WHERE (([status_id] = @Original_status_id) AND ([status_name] = @Original_status_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_status_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="status_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[status_codes] ([status_name]) VALUES (@status_name);
SELECT status_id, status_name FROM status_codes WHERE (status_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@status_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="status_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT status_id, status_name FROM dbo.status_codes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[status_codes] SET [status_name] = @status_name WHERE (([status_id] = @Original_status_id) AND ([status_name] = @Original_status_name));
SELECT status_id, status_name FROM status_codes WHERE (status_id = @status_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@status_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="status_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_status_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_status_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="status_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="status_id" ColumnName="status_id" DataSourceName="Dividends_DB.dbo.status_codes" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@status_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="status_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="status_id" DataSetColumn="status_id" />
              <Mapping SourceColumn="status_name" DataSetColumn="status_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Dividends_DBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="Dividends_DBDataSet" msprop:Generator_DataSetName="Dividends_DBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="dividends" msprop:Generator_RowEvHandlerName="dividendsRowChangeEventHandler" msprop:Generator_RowDeletedName="dividendsRowDeleted" msprop:Generator_RowDeletingName="dividendsRowDeleting" msprop:Generator_RowEvArgName="dividendsRowChangeEvent" msprop:Generator_TablePropName="dividends" msprop:Generator_RowChangedName="dividendsRowChanged" msprop:Generator_RowChangingName="dividendsRowChanging" msprop:Generator_TableClassName="dividendsDataTable" msprop:Generator_RowClassName="dividendsRow" msprop:Generator_TableVarName="tabledividends" msprop:Generator_UserTableName="dividends">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="div_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="div_id" msprop:Generator_ColumnPropNameInTable="div_idColumn" msprop:Generator_ColumnVarNameInTable="columndiv_id" msprop:Generator_UserColumnName="div_id" type="xs:int" />
              <xs:element name="symbol_code" msprop:Generator_ColumnPropNameInRow="symbol_code" msprop:Generator_ColumnPropNameInTable="symbol_codeColumn" msprop:Generator_ColumnVarNameInTable="columnsymbol_code" msprop:Generator_UserColumnName="symbol_code" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="payment_date" msprop:Generator_ColumnPropNameInRow="payment_date" msprop:Generator_ColumnPropNameInTable="payment_dateColumn" msprop:Generator_ColumnVarNameInTable="columnpayment_date" msprop:Generator_UserColumnName="payment_date" type="xs:dateTime" minOccurs="0" />
              <xs:element name="record_date" msprop:Generator_ColumnPropNameInRow="record_date" msprop:Generator_ColumnPropNameInTable="record_dateColumn" msprop:Generator_ColumnVarNameInTable="columnrecord_date" msprop:Generator_UserColumnName="record_date" type="xs:dateTime" minOccurs="0" />
              <xs:element name="status_id" msprop:Generator_ColumnPropNameInRow="status_id" msprop:Generator_ColumnPropNameInTable="status_idColumn" msprop:Generator_ColumnVarNameInTable="columnstatus_id" msprop:Generator_UserColumnName="status_id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="securities" msprop:Generator_RowEvHandlerName="securitiesRowChangeEventHandler" msprop:Generator_RowDeletedName="securitiesRowDeleted" msprop:Generator_RowDeletingName="securitiesRowDeleting" msprop:Generator_RowEvArgName="securitiesRowChangeEvent" msprop:Generator_TablePropName="securities" msprop:Generator_RowChangedName="securitiesRowChanged" msprop:Generator_RowChangingName="securitiesRowChanging" msprop:Generator_TableClassName="securitiesDataTable" msprop:Generator_RowClassName="securitiesRow" msprop:Generator_TableVarName="tablesecurities" msprop:Generator_UserTableName="securities">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="symbol_code" msprop:Generator_ColumnPropNameInRow="symbol_code" msprop:Generator_ColumnPropNameInTable="symbol_codeColumn" msprop:Generator_ColumnVarNameInTable="columnsymbol_code" msprop:Generator_UserColumnName="symbol_code">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="description" msprop:Generator_ColumnPropNameInRow="description" msprop:Generator_ColumnPropNameInTable="descriptionColumn" msprop:Generator_ColumnVarNameInTable="columndescription" msprop:Generator_UserColumnName="description">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="status_id" msprop:Generator_ColumnPropNameInRow="status_id" msprop:Generator_ColumnPropNameInTable="status_idColumn" msprop:Generator_ColumnVarNameInTable="columnstatus_id" msprop:Generator_UserColumnName="status_id" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="status_codes" msprop:Generator_RowEvHandlerName="status_codesRowChangeEventHandler" msprop:Generator_RowDeletedName="status_codesRowDeleted" msprop:Generator_RowDeletingName="status_codesRowDeleting" msprop:Generator_RowEvArgName="status_codesRowChangeEvent" msprop:Generator_TablePropName="status_codes" msprop:Generator_RowChangedName="status_codesRowChanged" msprop:Generator_RowChangingName="status_codesRowChanging" msprop:Generator_TableClassName="status_codesDataTable" msprop:Generator_RowClassName="status_codesRow" msprop:Generator_TableVarName="tablestatus_codes" msprop:Generator_UserTableName="status_codes">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="status_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="status_id" msprop:Generator_ColumnPropNameInTable="status_idColumn" msprop:Generator_ColumnVarNameInTable="columnstatus_id" msprop:Generator_UserColumnName="status_id" type="xs:int" />
              <xs:element name="status_name" msprop:Generator_ColumnPropNameInRow="status_name" msprop:Generator_ColumnPropNameInTable="status_nameColumn" msprop:Generator_ColumnVarNameInTable="columnstatus_name" msprop:Generator_UserColumnName="status_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:dividends" />
      <xs:field xpath="mstns:div_id" />
    </xs:unique>
    <xs:unique name="securities_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:securities" />
      <xs:field xpath="mstns:symbol_code" />
    </xs:unique>
    <xs:unique name="status_codes_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:status_codes" />
      <xs:field xpath="mstns:status_id" />
    </xs:unique>
  </xs:element>
</xs:schema>